swagger: '2.0'
info:
    description: 'API to poll for access to purchased orders'
    version: '1.0.0'
    title: 'PriceWaiter Market Orders API'
    termsOfService: 'https://market.pricewaiter.com/terms'
    contact:
        email: 'dev@pricewaiter.com'
    license:
        name: 'Apache 2.0'
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'market-api.pricewaiter.com'
basePath: '/api/v1'
tags:
    - name: 'orders'
      description: 'Access to PriceWaiter Market orders'
schemes:
    - 'https'
paths:
    /orders:
        get:
            tags:
                - 'orders'
            summary: 'Fetch all orders'
            security:
                - apiKey: []
            description: ''
            operationId: 'fetchOrders'
            produces:
                - 'application/json'
                - 'application/xml'
            parameters:
                - in: 'query'
                  name: 'since'
                  description: 'Restrict to orders created since this id'
                  required: false
                  type: 'string'
                - in: 'query'
                  name: 'page_size'
                  description: 'Number of results to return'
                  required: false
                  type: 'integer'
                - in: 'query'
                  name: 'page_number'
                  description: 'Page number to return'
                  required: false
                  type: 'integer'
            responses:
                200:
                    description: 'successful operation'
                    schema:
                        type: 'array'
                        items:
                            $ref: '#/definitions/Order'
                401:
                    description: 'Not Authenticated'
            x-swagger-router-controller: 'Order'
    /orders/{orderId}:
        get:
            tags:
                - 'orders'
            summary: 'Find order by ID'
            security:
                - apiKey: []
            description: 'Fetch details of a specific order'
            operationId: 'getOrderById'
            produces:
                - 'application/json'
                - 'application/xml'
            parameters:
                - name: 'orderId'
                  in: 'path'
                  description: 'ID of order to fetch'
                  required: true
                  type: 'string'
            responses:
                200:
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/Order'
                400:
                    description: 'Invalid ID supplied'
                401:
                    description: 'Not Authenticated'
                404:
                    description: 'Order not found'
            x-swagger-router-controller: 'Order'

securityDefinitions:
    apiKey:
        type: 'apiKey'
        name: 'X-Api-Key'
        in: 'header'

definitions:
    Order:
        type: 'object'
        properties:
            id:
                type: 'integer'
                format: 'int64'
                example: '42'
            line_items:
                type: 'array'
                items:
                    $ref: '#/definitions/LineItem'
            shipping:
                $ref: '#/definitions/Shipping'
            customer:
                $ref: '#/definitions/Customer'
            payment:
                $ref: '#/definitions/Payment'
        xml:
            name: 'Order'
    LineItem:
        type: 'object'
        properties:
            quantity:
                type: 'integer'
                format: 'int32'
                example: '2'
            product:
                type: 'object'
                $ref: '#/definitions/Product'
            unit_price_cents:
                type: 'integer'
                example: '1999'
            subtotal_cents:
                type: 'integer'
                example: '3998'
            tax_cents:
                type: 'integer'
                example: '123'
        xml:
            name: 'LineItem'

    Product:
        type: 'object'
        properties:
            brand:
                type: 'string'
                example: 'Nike'
            product_name:
                type: 'string'
                example: 'ZOOM TRAIN COMMAND'
            sku:
                type: 'string'
                example: '22478002'
            mpn:
                type: 'string'
                example: '22478002'
            upc:
                type: 'string'
                example: '22478002'
            product_id:
                type: 'string'
                example: '22478002'
            options:
                type: 'array'
                items:
                    $ref: '#/definitions/ProductOptions'
        xml:
            name: 'Product'

    ProductOptions:
        type: 'object'
        properties:
            name:
                type: 'string'
                example: 'color'
            value:
                type: 'string'
                example: 'dark grey'
            id:
                type: 'string'
                example: '33'
            value_id:
                type: 'string'
                example: '234234'

    Shipping:
        type: 'object'
        properties:
            method:
                type: 'string'
                example: 'UPS Ground'
            delivery_date:
                type: 'string'
                format: 'date'
                example: '2017-11-23'
            shipping_cents:
                type: 'integer'
                example: '222'

    Payment:
        type: 'object'
        properties:
            method:
                type: 'string'
                example: 'stripe'
            card_last_4:
                type: 'string'
                example: '1234'
            transaction_id:
                type: 'string'
                example: 'sp_2e4f6g9er'
            total_cents:
                type: 'integer'
                example: '4,343'

    Customer:
        type: 'object'
        properties:
            name:
                type: 'string'
                example: 'John Smith'
            billing_address:
                $ref: '#/definitions/Address'
            shipping_address:
                $ref: '#/definitions/Address'

    Address:
        type: 'object'
        properties:
            line1:
                type: 'string'
                example: '426 Market St'
            line2:
                type: 'string'
            line3:
                type: 'string'
            city:
                type: 'string'
                example: 'Chattanooga'
            state:
                type: 'string'
                example: 'TN'
            country:
                type: 'string'
                example: 'US'
            postal_code:
                type: 'string'
                example: '98225'
