openapi: 3.0.0
info:
    description: 'API to poll for access to purchased orders'
    version: '1.0.1'
    title: 'PriceWaiter Market Orders API'
    termsOfService: 'https://www.pricewaiter.com/pages/terms'
    contact:
        email: 'dev@pricewaiter.com'
    license:
        name: 'Apache 2.0'
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
    - url: 'https://market-api.pricewaiter.com/api/v1'
tags:
    - name: 'orders'
      description: 'Access to PriceWaiter Market orders'
paths:
    /orders:
        get:
            tags:
                - 'orders'
            summary: 'Fetch all orders'
            security:
                - ApiKeyAuth: []
            description: ''
            operationId: 'fetchOrders'
            parameters:
                - in: 'query'
                  name: 'since'
                  description: 'Restrict to orders created since this id'
                  required: false
                  schema:
                      type: 'string'
                - in: 'query'
                  name: 'page_size'
                  description: 'Number of results to return'
                  required: false
                  schema:
                      type: 'integer'
                - in: 'query'
                  name: 'page_number'
                  description: 'Page number to return'
                  required: false
                  schema:
                      type: 'integer'
            responses:
                200:
                    description: 'successful operation'
                    content:
                        application/json:
                            schema:
                                type: 'array'
                                items:
                                    $ref: '#/components/schemas/Order'
                401:
                    description: 'Not Authenticated'
            x-swagger-router-controller: 'Order'
    /orders/{orderId}:
        get:
            tags:
                - 'orders'
            summary: 'Find order by ID'
            security:
                - ApiKeyAuth: []
            description: 'Fetch details of a specific order'
            operationId: 'getOrderById'
            parameters:
                - name: 'orderId'
                  in: 'path'
                  description: 'ID of order to fetch'
                  required: true
                  schema:
                      type: 'string'
            responses:
                200:
                    description: 'successful operation'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Order'
                400:
                    description: 'Invalid ID supplied'
                401:
                    description: 'Not Authenticated'
                404:
                    description: 'Order not found'
            x-swagger-router-controller: 'Order'
        put:
            tags:
                - 'orders'
            summary: 'Update order by ID'
            security:
                - ApiKeyAuth: []
            description: 'Specify shipping and tracking information'
            operationId: 'updateOrderById'
            parameters:
                - name: 'orderId'
                  in: 'path'
                  description: 'ID of order to update'
                  required: true
                  schema:
                      type: 'string'
            responses:
                200:
                    description: 'successful operation'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Order'
                400:
                    description: 'Invalid ID supplied'
                401:
                    description: 'Not Authenticated'
                404:
                    description: 'Order not found'
            x-swagger-router-controller: 'Order'

components:
    securitySchemes:
        ApiKeyAuth:
            type: 'apiKey'
            name: 'X-Api-Key'
            in: 'header'

    schemas:
        Order:
            type: 'object'
            properties:
                id:
                    type: 'integer'
                    format: 'int64'
                    example: '42'
                    readOnly: true
                created_at:
                    type: 'string'
                    format: 'date'
                    example: '2017-11-23'
                    readOnly: true
                line_items:
                    type: 'array'
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/LineItem'
                shipping:
                    $ref: '#/components/schemas/Shipping'
                customer:
                    $ref: '#/components/schemas/Customer'
                payment:
                    $ref: '#/components/schemas/Payment'
        LineItem:
            type: 'object'
            properties:
                quantity:
                    type: 'integer'
                    format: 'int32'
                    example: '2'
                product:
                    $ref: '#/components/schemas/Product'
                unit_price_cents:
                    type: 'integer'
                    example: '1999'
                subtotal_cents:
                    type: 'integer'
                    example: '3998'
                tax_cents:
                    type: 'integer'
                    example: '123'

        Product:
            type: 'object'
            properties:
                brand:
                    type: 'string'
                    example: 'Nike'
                product_name:
                    type: 'string'
                    example: 'ZOOM TRAIN COMMAND'
                sku:
                    type: 'string'
                    example: '22478002'
                mpn:
                    type: 'string'
                    example: '22478002'
                upc:
                    type: 'string'
                    example: '22478002'
                product_id:
                    type: 'string'
                    example: '22478002'
                options:
                    type: 'array'
                    items:
                        $ref: '#/components/schemas/ProductOptions'
            xml:
                name: 'Product'

        ProductOptions:
            type: 'object'
            properties:
                name:
                    type: 'string'
                    example: 'color'
                value:
                    type: 'string'
                    example: 'dark grey'
                id:
                    type: 'string'
                    example: '33'
                value_id:
                    type: 'string'
                    example: '234234'

        Shipping:
            type: 'object'
            properties:
                carrier:
                    type: 'string'
                    example: 'UPS'
                tracking_number:
                    type: 'string'
                    example: '1Z7X43F90394811488'
                method:
                    type: 'string'
                    example: '2nd Day Air'
                    readOnly: true
                delivery_date:
                    oneOf:
                        - type: 'string'
                        - type: 'null'
                    format: 'date'
                    example: '2017-11-23'
                    readOnly: true
                shipping_cents:
                    type: 'integer'
                    example: '222'
                    readOnly: true

        Payment:
            type: 'object'
            properties:
                method:
                    type: 'string'
                    example: 'stripe'
                card_last_4:
                    type: 'string'
                    example: '1234'
                transaction_id:
                    type: 'string'
                    example: 'sp_2e4f6g9er'
                charge_ref:
                    type: 'string'
                transfer_ref:
                    type: 'string'
                total_cents:
                    type: 'integer'
                    example: '4,343'

        Customer:
            type: 'object'
            properties:
                name:
                    type: 'string'
                    example: 'John Smith'
                billing_address:
                    $ref: '#/components/schemas/Address'
                shipping_address:
                    $ref: '#/components/schemas/Address'

        Address:
            type: 'object'
            properties:
                line1:
                    type: 'string'
                    example: '426 Market St'
                line2:
                    type: 'string'
                line3:
                    type: 'string'
                city:
                    type: 'string'
                    example: 'Chattanooga'
                state:
                    type: 'string'
                    example: 'TN'
                country:
                    type: 'string'
                    example: 'US'
                postal_code:
                    type: 'string'
                    example: '98225'
                phone:
                    type: 'string'
                    example: '1-855-671-9889'
