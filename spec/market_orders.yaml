swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "PriceWaiter Market Orders API"
  termsOfService: "https://market.pricewaiter.com/terms"
  contact:
    email: "dev@pricewaiter.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "market-api.pricewaiter.com"
basePath: "/"
tags:
- name: "orders"
  description: "Access to PriceWaiter Market orders"
schemes:
- "https"
paths:
  /api/v1/orders:
    get:
      tags:
      - "orders"
      summary: "Fetch all orders"
      description: ""
      operationId: "fetchOrders"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "query"
        name: "since"
        description: "Restrict to orders created since this id"
        required: false
        type: "string"
      - in: "query"
        name: "page_size"
        description: "Number of results to return"
        required: false
        type: "integer"
      - in: "query"
        name: "page_number"
        description: "Page number to return"
        required: false
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid Order"
  /api/v1/orders/{orderId}:
    get:
      tags:
      - "orders"
      summary: "Find order by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"
      operationId: "getOrderById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of pet that needs to be fetched"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      line_items:
        type: "array"
        items:
          $ref: '#/definitions/LineItem'
      shipping:
        $ref: '#/definitions/Shipping'
      customer:
        $ref: '#/definitions/Customer'
      payment:
        $ref: '#/definitions/Payment'
    xml:
      name: "Order"
  LineItem:
    type: "object"
    properties:
      quantity:
        type: "integer"
        format: "int64"
      product:
        type: "object"
        $ref: '#/definitions/Product'
      unit_price_cents:
        type: "integer"
      subtotal_cents:
        type: "integer"
      tax_cents:
        type: "integer"
    xml:
      name: "LineItem"

  Product:
    type: "object"
    properties:
      brand:
        type: "string"
      product_name:
        type: "string"
      product_sku:
        type: "string"
      product_id:
        type: "string"
      options:
        type: "array"
        items:
          $ref: "#/definitions/ProductOptions"
    xml:
      name: "Product"

  ProductOptions:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
      id:
        type: "string"
      value_id:
        type: "string"

  Shipping:
    type: "object"
    properties:
      method:
        type: "string"
      delivery_date:
        type: "string"
        format: "date"

  Payment:
    type: "object"
    properties:
      method:
        type: "string"
      card_last_4:
        type: "integer"
      transaction_id:
        type: "string"
      total_cents:
        type: "integer"

  Customer:
    type: "object"
    properties:
      name:
        type: "string"
      billing_address:
        $ref: '#/definitions/Address'
      shipping_address:
        $ref: '#/definitions/Address'

  Address:
    type: "object"
    properties:
      line1:
        type: "string"
      line2:
        type: "string"
      line3:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      country:
        type: "string"
      postal_code:
        type: "string"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
